name: Build Equuleus
on: [push]
#  push:
#    branches:
#      - equuleus
jobs:
  CheckBuildRequired:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.existing_release_id.outputs.id == null }}
      commit: ${{ steps.check_commit.outputs.EQUULEUS_COMMIT }}
      commit_datetime: ${{ steps.check_commit.outputs.COMMIT_DATETIME}}
    steps:
      - name: Get vyos-build info
        id: check_commit
        run: |
          # Clone the build script
          git clone -b equuleus --single-branch https://github.com/vyos/vyos-build
          cd vyos-build
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_DATETIME=$(git show -s --format=%cd --date=format:'%Y%m%d%H%M%S' $COMMIT_ID)

          # Save the commit id as output
          echo "::set-output name=EQUULEUS_COMMIT::$COMMIT_ID"
          echo "::set-output name=COMMIT_DATETIME::$COMMIT_DATETIME"

          # Remove the cloned data
          cd ..
          rm -R vyos-build
      - name: Check local release exists
        id: existing_release_id
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ steps.check_commit.outputs.COMMIT_DATETIME }}
          doNotFailIfNotFound: true

  BuildAndRelease:
    if: ${{ needs.CheckBuildRequired.outputs.should_build }}
    needs: CheckBuildRequired
    runs-on: ubuntu-latest
    steps:
      - name: Print info
        run: |
          echo "Should Build: ${{ needs.CheckBuildRequired.outputs.should_build }}"
          echo "Commit Datetime: ${{ needs.CheckBuildRequired.outputs.commit_datetime }}"
          echo "Commit Hash: ${{ needs.CheckBuildRequired.outputs.commit }}"
      - name: Check out local repository code
        uses: actions/checkout@v3
      - name: Check out VyOS-Build repository
        uses: actions/checkout@v3
        with:
          repository: 'vyos/vyos-build'
          ref: ${{ needs.CheckBuildRequired.outputs.commit }}
          path: './vyos-build'
      - name: Install the dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
      - name: Pull docker image
        run: |
          docker pull "vyos/vyos-build:equuleus"
      - name: "Patch the make scripts"
        run: |
          # Manipulate the image so that we add minimum configuration file for GCE
          cp ./vyos-gce-image/build-patches/tools/cloud-init/GCE/config.boot.default ./vyos-build/tools/cloud-init/GCE/config.boot.default
          cp -vR ./vyos-gce-image/chroot-patches/* ./vyos-build/data/live-build-config/includes/chroot/
          cp -vR ./vyos-gce-image/live-hooks-patches/* ./vyos-build/data/live-build-config/hooks/live/
      - name: Build ISO
        run: |
          docker run \
              --rm \
              -v "$(pwd)":/gce-vyos \
              -v "$(pwd)/vyos-build":/vyos-build \
              -e VYOS_VERSION="equuleus" \
              -e BUILD_BY="Github Action" \
              -w /vyos-build \
              --privileged \
              --sysctl net.ipv6.conf.lo.disable_ipv6=0 \
              -e GOSU_UID=$(id -u) \
              -e GOSU_GID=$(id -g) \
              "vyos/vyos-build:equuleus" \
              bash "./vyos-gce-image/build_script.sh" iso
      - uses: actions/upload-artifact@v3
        with:
          name: ISO
          path: |
            ./vyos-build/build/*.iso
      - name: Move ISO
        run: |
          mv ./vyos-build/build/*.iso ./
      - id: buildgce
        name: Build GCE Image
        run: |
          docker run \
              --rm \
              -v "$(pwd)":/vyos \
              -e VYOS_VERSION="equuleus" \
              -e BUILD_BY="Github Action" \
              -w /vyos \
              --privileged \
              --sysctl net.ipv6.conf.lo.disable_ipv6=0 \
              -e GOSU_UID=$(id -u) \
              -e GOSU_GID=$(id -g) \
              "vyos/vyos-build:equuleus" \
              bash "./vyos-gce-image/build_script.sh" GCE "${{ needs.CheckBuildRequired.outputs.commit }}"
      - uses: actions/upload-artifact@v3
        with:
          name: GCE-IMAGE
          path: ./vyos-build/build/*.tar.gz
      - name: Move GCE image
        run: |
          SOURCE=$(ls ./vyos-build/build/VyOS-*.tar.gz)
          mv "$SOURCE" ./vyos-equuleus-gce-image.tar.gz
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ needs.CheckBuildRequired.outputs.commit_datetime }}"
          prerelease: true
          title: "Build commit ${{ needs.CheckBuildRequired.outputs.commit }} on ${{ needs.CheckBuildRequired.outputs.commit_datetime }}"
          files: |
            *.iso
            vyos-equuleus-gce-image.tar.gz
