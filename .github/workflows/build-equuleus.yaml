name: Build Equuleus
on: [push]
#  push:
#    branches:
#      - equuleus
jobs:
  CheckBuildRequired:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.existing_release_id.outputs.id == null }}
      commit: ${{ steps.check_commit.outputs.EQUULEUS_COMMIT }}
      commit_datetime: ${{ steps.check_commit.outputs.COMMIT_DATETIME}}
    steps:
      - name: Get vyos-build info
        id: check_commit
        run: |
          # Clone the build script
          git clone -b equuleus --single-branch https://github.com/vyos/vyos-build
          cd vyos-build
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_DATETIME=$(git show -s --format=%cd --date=format:'%Y%m%d%H%M%S' $COMMIT_ID)

          # Save the commit id as output
          echo "::set-output name=EQUULEUS_COMMIT::$COMMIT_ID"
          echo "::set-output name=COMMIT_DATETIME::$COMMIT_DATETIME"

          # Remove the cloned data
          cd ..
          rm -R vyos-build
      - name: Check local release exists
        id: existing_release_id
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ steps.check_commit.outputs.COMMIT_DATETIME }}
          doNotFailIfNotFound: true

  BuildAndRelease:
    if: ${{ needs.CheckBuildRequired.outputs.should_build }}
    needs: CheckBuildRequired
    runs-on: ubuntu-latest
    steps:
      - name: Print info
        run: |
          echo "Should Build: ${{ needs.CheckBuildRequired.outputs.should_build }}"
          echo "Commit Datetime: ${{ needs.CheckBuildRequired.outputs.commit_datetime }}"
          echo "Commit Hash: ${{ needs.CheckBuildRequired.outputs.commit }}"
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install the dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
      - name: Pull docker image
        run: |
          docker pull "vyos/vyos-build:equuleus"
      - name: Prepare local folders
        run: |
          mkdir ./.builder
          mkdir ./.patches
      - name: Prepare Build Script
        run: |
          cat <<'EOF' >> ./.patches/config.boot.default
          interfaces {
              ethernet ens4 {
                  address dhcp
              }
              loopback lo {
              }
          }
          system {
              config-management {
                  commit-revisions 100
              }
              conntrack {
                  modules {
                      ftp
                      h323
                      nfs
                      pptp
                      sip
                      sqlnet
                      tftp
                  }
              }
              console {
                  device ttyS0 {
                      speed 38400
                  }
              }
              host-name vyos-gce
              login {
                  user vyos {
                      authentication {
                          encrypted-password $6$gf2ShN8QhLqyH$WedSwHWXMYgC/qoM7ibe2XwdZro.A.qsYqMH0P9jf5opselu31ACTUD1bkRTL8S3WeKjoJ1Uu2xOgZXSV9SOr1
                          plaintext-password ""
                      }
                  }
              }
              name-server 169.254.169.254
              name-server 8.8.8.8
              name-server 8.8.4.4
              
              ntp {
                  server time1.vyos.net {
                  }
                  server time2.vyos.net {
                  }
                  server time3.vyos.net {
                  }
              }
              syslog {
                  global {
                      facility all {
                          level info
                      }
                      facility protocols {
                          level debug
                      }
                  }
              }
          }
          // Warning: Do not remove the following line.
          // vyos-config-version: "broadcast-relay@1:cluster@1:config-management@1:conntrack@3:conntrack-sync@2:dhcp-relay@2:dhcp-server@6:dhcpv6-server@1:dns-forwarding@3:firewall@5:https@2:interfaces@22:ipoe-server@1:ipsec@5:isis@1:l2tp@3:lldp@1:mdns@1:nat@5:ntp@1:pppoe-server@5:pptp@2:qos@1:quagga@8:rpki@1:salt@1:snmp@2:ssh@2:sstp@3:system@21:vrrp@2:vyos-accel-ppp@2:wanloadbalance@3:webproxy@2:zone-policy@1"
          // Release version: equuleus
          EOF

          cat <<'EOF' >> ./.builder/build_script.sh
          #!/bin/bash
          git clone -b equuleus --single-branch https://github.com/vyos/vyos-build
          cd vyos-build
          git checkout ${{ needs.CheckBuildRequired.outputs.commit }}

          # Configure
          ./configure --architecture amd64 --build-by "Github Actions" --build-type=release --version equuleus

          # Manipulate the image so that we add minimum configuration file for GCE
          #cp /patches/config.boot.default ./data/live-build-config/includes.chroot/opt/vyatta/etc/config.boot.default
          cp /patches/config.boot.default ./tools/cloud-init/GCE/config.boot.default
          cp /patches/*.chroot ./data/live-build-config/hooks/live/*.chroot
          
          # Build the ISO and the GCE instance (ISO is required to build the GCE image)
          sudo make $1
          EOF
      - name: Build ISO
        run: |
          docker run \
              --rm \
              -v "$(pwd)":/vyos \
              -v "$(pwd)/.patches:/patches" \
              -v "$(pwd)/.builder":/home/vyos_bld/.builder \
              -e VYOS_VERSION="equuleus" \
              -e BUILD_BY="Github Action" \
              -w /vyos \
              --privileged \
              --sysctl net.ipv6.conf.lo.disable_ipv6=0 \
              -e GOSU_UID=$(id -u) \
              -e GOSU_GID=$(id -g) \
              "vyos/vyos-build:equuleus" \
              bash "/home/vyos_bld/.builder/build_script.sh" iso
      - uses: actions/upload-artifact@v3
        with:
          name: ISO
          path: |
            ./vyos-build/build/*.iso
      - name: Move ISO
        run: |
          mv ./vyos-build/build/*.iso ./
      - id: buildgce
        name: Build GCE Image
        run: |
          docker run \
              --rm \
              -v "$(pwd)":/vyos \
              -v "$(pwd)/.patches:/patches" \
              -v "$(pwd)/.builder":/home/vyos_bld/.builder \
              -e VYOS_VERSION="equuleus" \
              -e BUILD_BY="Github Action" \
              -w /vyos \
              --privileged \
              --sysctl net.ipv6.conf.lo.disable_ipv6=0 \
              -e GOSU_UID=$(id -u) \
              -e GOSU_GID=$(id -g) \
              "vyos/vyos-build:equuleus" \
              bash "/home/vyos_bld/.builder/build_script.sh" GCE
      - uses: actions/upload-artifact@v3
        with:
          name: GCE-IMAGE
          path: ./vyos-build/build/*.tar.gz
      - name: Move GCE image
        run: |
          SOURCE=$(ls ./vyos-build/build/VyOS-*.tar.gz)
          mv "$SOURCE" ./vyos-equuleus-gce-image.tar.gz
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ needs.CheckBuildRequired.outputs.commit_datetime }}"
          prerelease: true
          title: "Build commit ${{ needs.CheckBuildRequired.outputs.commit }} on ${{ needs.CheckBuildRequired.outputs.commit_datetime }}"
          files: |
            *.iso
            vyos-equuleus-gce-image.tar.gz
